#!/usr/bin/env bash
#
# This file is a modified version of the JETTY init.d script, released
# under the eclipse public license.
#
# To get the service to restart correctly on reboot, uncomment below (3 lines):
# ========================
# chkconfig: 3 99 99
# description: SSCLJ cloud management interface
# processname: ssclj
# ========================

# Configuration files
#
# /etc/default/ssclj or $HOME/etc/default/ssclj
#   If it exists, this is read at the start of script. You may set any
#   environmental variables that you wish to change from the defaults.
#
# Configuration variables
#
# JAVA
#   Command to invoke Java. If not set, java (from the PATH) will be used.
#
# JAVA_OPTIONS
#   Extra options to pass to the JVM
#
# SSCLJ_HOME
#   Where the ssclj software is installed.  If not set, then this will
#   default to /opt/slipstream/ssclj.
#
# SSCLJ_PORT
#   Override the default port for this service.  This will also require
#   manual changes to the nginx configuration.
#
# SSCLJ_RUN
#   Where the ssclj.pid file should be stored. It defaults to the
#   first available of /var/run, /usr/var/run, and SSCLJ_HOME.
#
# SSCLJ_PID
#   The SSCLJ PID file, defaults to $SSCLJ_RUN/ssclj.pid
#
# SSCLJ_USER
#   If set, then this user will be used to run the server.  If running
#   as root, this defaults to "slipstream".  If running as a normal user,
#   then the normal user's account will be used.
#

usage() {
    echo "Usage: ${0##*/} {start|stop|run|restart|check|status|supervise} "
    exit 1
}

[ $# -gt 0 ] || usage


##################################################
# Some utility functions
##################################################
findDirectory() {
  local L OP=$1
  shift
  for L in "$@"; do
    [ "$OP" "$L" ] || continue
    printf %s "$L"
    break
  done
}

running() {
  local PID=$(cat "$1" 2>/dev/null) || return 1
  kill -0 "$PID" 2>/dev/null
}


##################################################
# Pull off options and get the action
##################################################
while [[ $1 = -* ]]; do
  shift
done
ACTION=$1
shift

##################################################
# Read startup configuration files
##################################################
ETC=/etc
if [ $UID != 0 ]; then
  ETC=$HOME/etc
fi

CONFIG=$ETC/default/ssclj
if [ -f "$CONFIG" ]; then
  source "$CONFIG"
fi


##################################################
# Set SSCLJ_HOME to default if not already set
##################################################
if [ -z "$SSCLJ_HOME" ]; then
  SSCLJ_HOME=/opt/slipstream/ssclj
fi

if [ ! -d "$SSCLJ_HOME" ]; then
  echo "ERROR: SSCLJ_HOME=${SSCLJ_HOME} is not an existing directory"
  exit 1
fi


##################################################
# Switch to the home directory.
##################################################
cd "$SSCLJ_HOME"
SSCLJ_HOME=$PWD


#####################################################
# Set location and name of PID file
#####################################################
if [ -z "$SSCLJ_RUN" ]; then
  SSCLJ_RUN=$(findDirectory -w /var/run /usr/var/run $SSCLJ_HOME)
fi

if [ -z "$SSCLJ_PID" ]; then
  SSCLJ_PID="$SSCLJ_RUN/ssclj.pid"
fi


##################################################
# Verify that java executable is available
##################################################
if [ -z "$JAVA" ]; then
  JAVA=$(which java)
fi

if [ -z "$JAVA" ]; then
  echo "Java executable cannot be found.  Put in path or set JAVA variable." 2>&2
  exit 1
fi


#####################################################
# See if SSCLJ_CLASS is defined
#####################################################
if [ -z "$SSCLJ_CLASS" ]; then
  SSCLJ_CLASS=com.sixsq.slipstream.ssclj.app.main
fi


#####################################################
# See if SSCLJ_PORT is defined
#####################################################
if [ -z "$SSCLJ_PORT" ]; then
  SSCLJ_PORT=8201
fi


#####################################################
# See if SSCLJ_USER is defined
#####################################################
if [ -z "$SSCLJ_USER" ]; then
  SSCLJ_USER=slipstream
fi


#####################################################
# See if SSCLJ_GRAPHITE_HOST is defined
#####################################################
GRAPHITE_OPTION=''
if [ -n "$SSCLJ_GRAPHITE_HOST" ]; then
  GRAPHITE_OPTION="-Dgraphite.host=${SSCLJ_GRAPHITE_HOST}"
fi


RUN_ARGS=(${JAVA_OPTIONS[@]} ${GRAPHITE_OPTION} -Dconfig.name=db.spec -Dlogfile.path=production -cp "$SSCLJ_HOME/resources:$SSCLJ_HOME/lib/*" $SSCLJ_CLASS $SSCLJ_PORT)
RUN_CMD=("$JAVA" ${RUN_ARGS[@]})


##################################################
# Do the action
##################################################
case "$ACTION" in
  start)
    echo -n "Starting SSCLJ: "

    if [ $UID -eq 0 ] && type start-stop-daemon > /dev/null 2>&1; then
      unset CH_USER
      if [ -n "$SSCLJ_USER" ]; then
        CH_USER="-c$SSCLJ_USER"
      fi

      start-stop-daemon -S -p"$SSCLJ_PID" $CH_USER -d"$SSCLJ_HOME" -b -m -a "$JAVA" -- "${RUN_ARGS[@]}" --daemon

    else

      if [ -f "$SSCLJ_PID" ]; then
        if running $SSCLJ_PID; then
          echo "Already Running!"
          exit 1
        else
          # dead pid file - remove
          rm -f "$SSCLJ_PID"
        fi
      fi

      if [ "$SSCLJ_USER" ]; then
        touch "$SSCLJ_PID"
        chown "$SSCLJ_USER" "$SSCLJ_PID"
        # FIXME: Broken solution: wordsplitting, pathname expansion, arbitrary command execution, etc.
        su - "$SSCLJ_USER" -c "
          exec ${RUN_CMD[*]} --daemon &
          disown \$!
          echo \$! > '$SSCLJ_PID'"
      else
        "${RUN_CMD[@]}" &
        disown $!
        echo $! > "$SSCLJ_PID"
      fi

    fi

    ;;

  stop)
    echo -n "Stopping SSCLJ: "
    if [ $UID -eq 0 ] && type start-stop-daemon > /dev/null 2>&1; then
      start-stop-daemon -K -p"$SSCLJ_PID" -d"$SSCLJ_HOME" -a "$JAVA" -s HUP

      TIMEOUT=30
      while running "$SSCLJ_PID"; do
        if (( TIMEOUT-- == 0 )); then
          start-stop-daemon -K -p"$SSCLJ_PID" -d"$SSCLJ_HOME" -a "$JAVA" -s KILL
        fi

        sleep 1
      done

      rm -f "$SSCLJ_PID"
      echo OK
    else
      PID=$(cat "$SSCLJ_PID" 2>/dev/null)
      kill "$PID" 2>/dev/null

      TIMEOUT=30
      while running $SSCLJ_PID; do
        if (( TIMEOUT-- == 0 )); then
          kill -KILL "$PID" 2>/dev/null
        fi

        sleep 1
      done

      rm -f "$SSCLJ_PID"
      echo OK
    fi

    ;;

  restart)
    SSCLJ_SH=$0
    if [ ! -f $SSCLJ_SH ]; then
      echo "$SSCLJ_HOME/bin/SSCLJ.sh does not exist."
      exit 1
    fi

    "$SSCLJ_SH" stop "$@"
    "$SSCLJ_SH" start "$@"

    ;;

  supervise)
    #
    # Under control of daemontools supervise monitor which
    # handles restarts and shutdowns via the svc program.
    #
    exec "${RUN_CMD[@]}"

    ;;

  run|demo)
    echo "Running SSCLJ: "

    if [ -f "$SSCLJ_PID" ]; then
      if running "$SSCLJ_PID"; then
        echo "Already Running!"
        exit 1
      else
        # dead pid file - remove
        rm -f "$SSCLJ_PID"
      fi
    fi

    exec "${RUN_CMD[@]}"
    ;;

  check|status)
    echo "Checking arguments to SSCLJ: "
    echo "SSCLJ_HOME    =  $SSCLJ_HOME"
    echo "SSCLJ_DB_CFG  =  $SSCLJ_DB_CFG"
    echo "SSCLJ_PID     =  $SSCLJ_PID"
    echo "JAVA          =  $JAVA"
    echo "JAVA_OPTIONS  =  ${JAVA_OPTIONS[*]}"
    echo "RUN_CMD       =  ${RUN_CMD[*]}"
    echo

    if [ -f "$SSCLJ_PID" ]; then
      echo "SSCLJ running pid=$(< "$SSCLJ_PID")"
      exit 0
    fi
    exit 1

    ;;

  *)
    usage

    ;;
esac

exit 0
