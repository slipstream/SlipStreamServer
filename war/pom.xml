<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>SlipStreamServer-war</artifactId>
  <name>SlipStreamServer/war</name>

  <packaging>war</packaging>

  <parent>
    <groupId>com.sixsq.slipstream</groupId>
    <artifactId>SlipStreamServer</artifactId>
    <version>3.51-SNAPSHOT</version>
  </parent>
  
  <dependencies>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamAsync</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamPersistence</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector</artifactId>
      <version>${project.version}</version>
    </dependency>

<!--
  These cannot be added to WAR because it creates a circular dependency
  between the SlipStreamServer module (which contains the connector
  interface) and the SlipStreamConnector module.

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OTC-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OTC-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OpenNebula-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OpenNebula-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OpenStack-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-OpenStack-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-NuvlaBox-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-NuvlaBox-java-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-EC2-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-EC2-java-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-CloudStack-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-CloudStack-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-Exoscale-conf</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-Exoscale-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamConnector-PhysicalHost-jar</artifactId>
      <version>${project.version}</version>
    </dependency>
-->

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamCljResources-jar-dep</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamCljResources-jar</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamDbSerializers-jar-dep</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamDbSerializers-jar</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamService</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sixsq.slipstream</groupId>
      <artifactId>SlipStreamServer-ui-static-content</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
    </dependency>

    <dependency>
      <groupId>org.restlet.jee</groupId>
      <artifactId>org.restlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.restlet.jee</groupId>
      <artifactId>org.restlet.ext.servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.simpleframework</groupId>
      <artifactId>simple-xml</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>

    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-documentation</id>
            <phase>prepare-package</phase>
            <configuration>
              <artifactItems>

                <artifactItem>
                  <groupId>com.sixsq.slipstream</groupId>
                  <artifactId>SlipStreamServer-ui-static-content</artifactId>
                  <type>zip</type>
                  <outputDirectory>${project.build.directory}/static-content</outputDirectory>
                </artifactItem>

              </artifactItems>
            </configuration>
            <goals>
              <goal>unpack</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>${project.build.directory}/static-content/</directory>
              <targetPath>static-content/</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>

<!-- 
  Adding these dependencies will cause the connector loading
  to fail when running the server via jetty:run-war.  If you 
  want more than the local connector, then add them in the 
  module dependencies above.

  This problem is apparently due to a difference in the class
  loading scheme between the plugin and a deployment in a 
  standalone jetty container.

        <dependencies>
          <dependency>
              <groupId>com.sixsq.slipstream</groupId>
              <artifactId>SlipStreamConnector-CloudStack-jar</artifactId>
              <version>${project.version}</version>
          </dependency>
        </dependencies>

          <dependency>
              <groupId>com.sixsq.slipstream</groupId>
              <artifactId>SlipStreamConnector-OpenStack-jar</artifactId>
              <version>${project.version}</version>
          </dependency>

          <dependency>
              <groupId>com.sixsq.slipstream</groupId>
              <artifactId>SlipStreamConnector-PhysicalHost-jar</artifactId>
              <version>${project.version}</version>
          </dependency>

        </dependencies>
-->
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          	<licenseName>apache_v2</licenseName>
          	<organizationName>SixSq Sarl (sixsq.com)</organizationName>
          	<inceptionYear>2013</inceptionYear>
          	<processStartTag>+=================================================================+</processStartTag>
          	<sectionDelimiter>=====</sectionDelimiter>
          	<processEndTag>-=================================================================-</processEndTag>
            <excludes>
              <exclude>**/external/**</exclude>
              <exclude>**/interoute/**</exclude>
              <exclude>**/cloudsigma/**</exclude>
              <exclude>**/aws/**</exclude>
            </excludes>
        </configuration>
      </plugin>
  
    </plugins>
  </build>

</project>
